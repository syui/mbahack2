<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: music | MBA-HACK2]]></title>
  <link href="https://mbahack2.syui.cf/blog/categories/music/atom.xml" rel="self"/>
  <link href="https://mbahack2.syui.cf/"/>
  <updated>2017-05-24T00:40:01+00:00</updated>
  <id>https://mbahack2.syui.cf/</id>
  <author>
    <name><![CDATA[syui]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[music-make-vocaloid]]></title>
    <link href="https://mbahack2.syui.cf/blog/2016/05/20/music-make-vocaloid"/>
    <updated>2016-05-20T00:00:00+00:00</updated>
    <id>https://mbahack2.syui.cf/blog/2016/05/20/music-make-vocaloid</id>
    <content type="html"><![CDATA[<p><img src="/images/more.png" alt="phoenix-power" align="left">イチから始める作曲入門です。今回はBGMから歌詞まで全部自分で作ります。<!--more--><br clear="all"></p>

<iframe width="100%" height="120" src="https://www.mixcloud.com/widget/iframe/?feed=https%3A%2F%2Fwww.mixcloud.com%2Fsyui%2Ft%2F&hide_cover=1&light=1" frameborder="0"></iframe>


<p>MixCloudはどうやら短い曲をアップロードしても削除されてしまう模様。GitHubにあげました。</p>

<p><a href="https://raw.githubusercontent.com/syui/vocaloid/master/t/t.mp3">https://raw.githubusercontent.com/syui/vocaloid/master/t/t.mp3</a></p>

<h2>作曲の流れ</h2>

<p>作曲の基本的な流れは、(1)BGMを作る、(2)BGMからリズムを作る、(3)リズムに歌詞を入れるという流れになります。あくまで個人的なものなので、各々が好きなように歌詞から作ったり、リズムから作ったりして良いと思っています。</p>

<p>殆どの作業は、DTMである<a href="http://www.mi7.co.jp/products/presonus/studioone/">Studio One</a>から行います。</p>

<p>これは、<a href="http://www.crypton.co.jp/mp/pages/prod/vocaloid/mikuv3.jsp">初音ミクV3</a>に付属しているものです。</p>

<p>ちなみに、このアプリは個人的にはあまりおすすめしません。両方をちょっとだけ触ってみた感触でいうと、私は<a href="http://japan.steinberg.net/jp/products/cubase/start.html">Cubase</a>のほうが良いかなと思っています。</p>

<p>ただし、ボーカロイドである初音ミクと連携できているため私は<code>Cubase</code>ではなく<code>Studio One</code>を使っています。</p>

<p>まあ、私は初心者ですし、アプリにはあまりこだわりとかありません。しかし、Studio Oneはなかなかにバグがあるアプリだとは思っていますし、割りとバグを踏んでたりします。</p>

<h2>BGMを作ろう</h2>

<p>私は作曲の知識、音楽の知識はゼロです。といっても、それ以外のすべての分野における知識は割りとゼロなので音楽知識もゼロだというだけですが、音符すら読めません。</p>

<p>私の音楽知識では、取っ掛かりとなるものがなければどうしようもありません。</p>

<p>したがって、まずはBGMをとっかかりとして作曲することを考えるわけですが、<a href="https://itunes.apple.com/jp/app/chordana-trackformer/id1054301386">Chordana Trackformer</a>を使って作ったものを使います。</p>

<p>このアプリは、マイクから音を読み取って自動で作曲(BGM)してくれるアプリで、適当に好きな曲でも流してアプリで読み取って調整します。</p>

<p><img src="https://raw.githubusercontent.com/mba-hack/images/master/ios_chordana_trackformer.png" alt="" /></p>

<p>出来上がったものは、<code>.mid</code>形式でメールにでも下書き保存し、あとからそれをPCでダウンロードするのが良いでしょう。</p>

<h2>リズムを作ろう</h2>

<p>次に、先ほど保存した.midをStudio Oneで読み込みます。</p>

<p>読み込んだ後は、ライブラリから初音ミクを追加(起動)しましょう。</p>

<p>ここからはボカロエディタ(初音ミク)での作業になります。</p>

<p>ボカロエディタからも.midを読み込みます。</p>

<p>すると、色々な音階が付いたチャンネルが追加されます。</p>

<p><img src="https://raw.githubusercontent.com/mba-hack/images/master/ios_chordana_trackformer_02.png" alt="" /></p>

<p>この中から良いものを探し、組み合わせ、修正してBGMに合ったリズムを作ります。リズムにはその後、歌詞を乗せることになります。</p>

<p>ここからは感覚的な判断が重要になってきます。サンプルとして作った曲は以下になります。</p>

<p><a href="https://github.com/syui/vocaloid/tree/master/t">https://github.com/syui/vocaloid/tree/master/t</a></p>

<h2>歌詞を入れよう</h2>

<p>最後に先ほど作ったリズミに歌詞を入れていきます。</p>

<p>歌詞の入れ方ですが、とりあえず思いついた単語を適当に入れていきます。文章でも構いません。</p>

<p>そして、流してみて1/10くらいの確率で音と歌詞がマッチする部分があります。</p>

<p>それを残して、あとは消します。歌詞を消すというのは、<code>ら</code>や<code>ー</code>を入れると良いでしょう。</p>

<p>これを繰り返していくうちに、なんとか聞けるようになってきたと思ったら完成間近です。</p>

<p>一旦、作業をやめて明日もう一度聞いてみることにしましょう。理由は後述します。</p>

<h2>次の日に修正しよう</h2>

<p>作ってる時は良いと思った曲でも、一日間を置くことで、「なんでこれがいいと思ったんだろう」ということになります。</p>

<p>なので、次の日にまた修正します。</p>

<p>だいたいここまでやると完成ですね。</p>

<p>もちろん、「まだまだ」という場合もあるでしょうし、クオリティをもっともっと高めたいという場合もあるでしょう。</p>

<p>そのような場合は、新しい曲を作っている合間にでも作業すると良いでしょう。</p>

<h2>なぜクオリティを高めるより新しい曲を作ったほうが良いのか</h2>

<p>これは初心者前提の話なのですが、クオリティを高める作業は、同じ場所を行ったり来たりするような非常に非効率な作業でした。他の人は違うかもしれませんが、私の場合はそうでした。</p>

<p>同じ箇所に同じ修正を入れたり、消したりの繰り返し。クオリティといってもなにをどうすればいいのか全く分かりません。</p>

<p>なので、新しい曲をクオリティを意識し作り始めたほうが気付きは多いだろうと思います。</p>

<p>何度も作ることで自然に新しい気付きは芽生えると思います。そのほうが無駄な作業をするより効率が良いと考えました。</p>

<p>もちろん、やり方は人それぞれです。</p>

<p>なので、クオリティを高める作業に集中したい人もいると思います。</p>

<p>その場合、既存の曲を参考に、ある程度当たりをつけてみると良いかもしれませんね。</p>

<p>でも、時間がかかりそうなので、私は苦手です&hellip;。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mmm-make-video-01]]></title>
    <link href="https://mbahack2.syui.cf/blog/2015/11/13/mmm-make-video-01"/>
    <updated>2015-11-13T00:00:00+00:00</updated>
    <id>https://mbahack2.syui.cf/blog/2015/11/13/mmm-make-video-01</id>
    <content type="html"><![CDATA[<p><img src="/images/more.png" alt="phoenix-power" align="left">MMMで簡単な動画を作ってみたので、MMMの基本的な使い方を紹介します。<!--more--><br clear="all"></p>

<h2>MikuMikuMoving</h2>

<h3>必要なもの</h3>

<ul>
<li><p>Editor : <a href="https://sites.google.com/site/mikumikumoving/">MikuMikuMoving</a></p></li>
<li><p>Model : <a href="http://piapro.jp/t/KPU3">Appearance Miku</a></p></li>
<li><p>Motion : <a href="https://bowlroll.net/file/15002">シュレディンガイガーのこねこ</a></p></li>
<li><p>Effect : <a href="http://nemunemunomori.blog.so-net.ne.jp/2014-11-09">カラフルパーティクル</a></p></li>
<li><p>Stage : <a href="https://bowlroll.net/file/5960">DIVAみたいな宇宙っぽいステージ</a></p></li>
</ul>


<h3>手順</h3>

<p>はじめに、モデルとステージを<code>モデル読み込み</code>から読み込みます。次に、モデルがステージと重なって表示されているので、下のほうでモデルを選択し、<code>編集 -&gt; センターバイアス</code>からモデルのZ軸を少しだけ前に移動させます。</p>

<p>次に、<code>ファイル -&gt; モーション読み込み</code>を実行。こねこのLat式です。</p>

<p>次に、同じようにエフェクト読み込みを行い、様々なエフェクトを読み込みます。そして、ついでにエフェクト割当で、<code>Default</code>を変更します。</p>

<p>最後に、このままでは髪の毛が表示されたり、消えたりしてしまいますので、<code>物理演算 -&gt; 再生時のみ演算</code>を選択します。</p>

<p>だいぶそれっぽくなってきました。あとは、カメラワークです。</p>

<p>下のビデオカメラアイコンをクリックし、タイムラインにカメラを追加します。</p>

<p>そして、動画を再生しながら、カメラを動かしたいポイントで停止し、画面左にあるタイムラインにて、カメラワーク、位置を登録していきましょう。</p>

<p>具体的には、画面下のチェックアイコンから登録できます。ここでは、簡単に、画面右下にあるアイコンにて、カメラの定形位置を変化させていくことにします。つまり、カメラ位置アイコン(顔マーク)のクリック、タイムラインでチェック(チェックアイコンは画面下、チェックが入るのはタイムライン上になります)、再生、停止、顔アイコンのクリック、タイムラインのチェック、再生という手順の繰り返しになります。</p>

<p>音楽は、下の音楽プラスアイコンから任意のタイムライン位置で追加できます。</p>

<p>これで概ね動画の完成です。</p>

<p><img src="https://raw.githubusercontent.com/mba-hack/images/master/mmm_mikumikumoving_sample_video_01.gif" alt="" /></p>

<h3>感想</h3>

<p>初サンプル動画を作成してみましたが、MMM使いやすい感じします。MMDすらほとんど使ったことなかったけど&hellip;。</p>

<p>そういえば、パンツが見えまくる気がするのだけど、これ、どうにかならないのか&hellip;。モーションが原因かな。それともステージの物理演算とか。</p>

<p>もしくは、MMDというのはそういうものなのだろうか。結構見えるのが普通とか。初音ミクは、音楽のみ聴いてただけで、動画全然見てこなかったので、実は、あまり知らなかったりする。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mmm-mikumikumoving-appearance-miku]]></title>
    <link href="https://mbahack2.syui.cf/blog/2015/11/12/mmm-mikumikumoving-appearance-miku"/>
    <updated>2015-11-12T00:00:00+00:00</updated>
    <id>https://mbahack2.syui.cf/blog/2015/11/12/mmm-mikumikumoving-appearance-miku</id>
    <content type="html"><![CDATA[<p><img src="/images/more.png" alt="phoenix-power" align="left">MMMでAppearance Mikuに踊ってもらった。<!--more--><br clear="all"></p>

<p>MMDは過去に一度だけ使ってみたことがあったのだけど、使いにくかったので、今回は、MMMを使ってみました。エフェクトは加算してます。</p>

<p><img src="https://raw.githubusercontent.com/mba-hack/images/master/mmm_mikumikumoving_02.png" alt="" /></p>

<ul>
<li><p>Editor : <a href="https://sites.google.com/site/mikumikumoving/">MikuMikuMoving</a></p></li>
<li><p>Model : <a href="http://piapro.jp/t/KPU3">Appearance Miku</a></p></li>
<li><p>Motion : <a href="https://bowlroll.net/file/15002">シュレディンガイガーのこねこ</a></p></li>
<li><p>Effect : <a href="http://nemunemunomori.blog.so-net.ne.jp/2014-11-09">カラフルパーティクル</a></p></li>
</ul>


<p>MMM自体はよさ気だったのですが、色々と不都合があって、モデルの髪の毛が表示されなかったり、MMMが32bitでしか動かなかったり。ちなみに、モデルは、もう一つの<code>.pmx</code>を読み込みます。そもそもMMD関連にあまり詳しくないので、これは、Windows10がダメなのか、モデルがダメなのか、MMMがダメなのか、よくわからない。</p>

<p><img src="https://raw.githubusercontent.com/mba-hack/images/master/mmm_mikumikumoving_01.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[unity-mikumikudance-mmd-vmd]]></title>
    <link href="https://mbahack2.syui.cf/blog/2015/08/21/unity-mikumikudance"/>
    <updated>2015-08-21T00:00:00+00:00</updated>
    <id>https://mbahack2.syui.cf/blog/2015/08/21/unity-mikumikudance</id>
    <content type="html"><![CDATA[<p><img src="/images/more.png" alt="phoenix-power" align="left">ミクに踊ってもらいました。<!--more--><br clear="all"></p>

<p><img src="https://raw.githubusercontent.com/mba-hack/images/master/unity-mikumikudance-vmd.png" alt="" /></p>

<p>モデル : <a href="http://somefatwhiteguy.deviantart.com/art/Api-Miku-Costume-Arrangement-A-Updated-DL-again-412592117">Api Miku Costume Arrangement A</a></p>

<p>モーション : <a href="https://bowlroll.net/file/50621">Heart Beats モーションデータ</a></p>

<p>プラグイン :</p>

<p><a href="http://mmd-for-unity-proj.github.io/mmd-for-unity/">MikuMikuDance for Unity</a></p>

<p><a href="http://stereoarts.jp/">MMD4Mecanim</a></p>

<p>基本的な手順としては、ダウンロードしたMMDモデルをMMD4Mecanimを使ってUnityで読み込みます。どちらも解凍したディレクトリをUnityプロジェクトのルートにでも置けばよいです。プラグインの場合は、ディレクトリ内にUnityの実行ファイルが置かれていると思いますので、それを開くと、プラグインをインポートできるようになってると思います。</p>

<p>モデルは、モデルディレクトリ内にある<code>.mmd4mecanim.asset</code>を開くと変換できると思います。</p>

<p>次に、変換したモデルをSceneにドラッグアンドドロップします。</p>

<p>ここで、初音ミクの3DモデルがUnityで表示できました。</p>

<p>VMDモーションをUnityで読み込むには、MikuMikuDanceを使う必要があります。MMD4Mecanimと同じように、プラグインをインポートして、先ほどモデルを変換する前に使った<code>.mmd4mecanim.asset</code>をもう一度開き、表示された<code>VMD</code>の項目のところに、モーションデータである<code>.vmd</code>を指定します。</p>

<p>後は実行すると、モデル内に<code>Api Miku Costume Arrangement A ponytail.fbx &gt; heartbeats_miku.vmd</code>というものができていますが、これがモーションになります。</p>

<p>モーションをコントロールするには、<code>Creat &gt; Animation Controller</code>を使います。これをモデルの<code>inspector &gt; Animation &gt; Controller</code>に指定します。そして、このコントローラーに先ほどのモーションを紐付ければよいです。</p>

<p>なお、モデルのAnimation Typeは<code>Humanoid</code>にしておきましょう。でないと動きません。</p>

<p>まあ、そんな感じで、後はステージと曲を用意して、それを組み合わせると、一般的な初音ミク動画の完成です。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vocaloid-make-music]]></title>
    <link href="https://mbahack2.syui.cf/blog/2015/07/01/vocaloid-make-music"/>
    <updated>2015-07-01T00:00:00+00:00</updated>
    <id>https://mbahack2.syui.cf/blog/2015/07/01/vocaloid-make-music</id>
    <content type="html"><![CDATA[<p><img src="/images/more.png" alt="phoenix-power" align="left">作成した曲とかゲームとか。<!--more--><br clear="all"></p>

<h2>作成した曲</h2>

<p>結構、実験的なもの多い。初音ミクの声を変えてみたりとか。</p>

<h2>作成したゲーム</h2>

<p>これは、エロゲを作ってみたということになるのかなあ。まあ、そんな感じです。(なにをエロゲというのかよくわかってない)</p>

<p>正直、こういうゲームはあまり詳しくないので、とりあえずこんな感じで女の子のキャラが出てくるのをそう呼んでる感じです。</p>

<p>特に面白くもないゲームだと思いますが、一応、お話とキャラは少しだけ作りました。</p>

<p>初めてのゲーム作りなので、色々とあれで、実験的なものになってます。そのうち、やる気が出てきたら3話くらい作るかもです。現在それくらいは考えてあるので。</p>

<p>1話では、ゲームの方向性の説明と導入部分をゲーム化したという感じになってます。</p>

<p>実行ファイルは、Mac版とブラウザ版を作りました。Windows版も作ろうと思いましたが、何故かLive2Dのモデルが表示されなかったので、なしということで。</p>

<p>Mac版は、ダウロードして遊べます。特に、大した話もなく、導入部分と方向性だけをゲームにしてみたって感じに過ぎませんが&hellip;。</p>

<p>ブラウザ版は、アクセスしてゲームが始まるまで数分待たなければならないかもしれません。非常に遅いです。</p>

<h3>ブラウザ版</h3>

<p>ブラウザ版はだれでもプレイできます。</p>

<iframe src="http://tyranoscript.bitbucket.org/test/index.html" style="width:672px;height:448px"></iframe>


<h3>Mac版</h3>

<p>なんかファイル置き場っていうのか、そういうのを用意してなかったなあと思って、適当にページを作って用意してみました。ダウンロードは直接ファイルへのリンク貼ってますので、注意です。</p>

<p><a href="http://mba-hack.github.io/">http://mba-hack.github.io/</a></p>

<p><a href="http://mba-hack.github.io/download/game_v01.zip">ダウンロード</a></p>

<p>ちなみに、ページでは、PayPal寄付とかKindle購入とかできませんので注意です。読みたい場合は、無料で読めますので、無料で読んでください。個人的には、曲とか本とかはむしろ販売したほうが聴いてくれたり、読んでくれたりする人増えるかもなあとか思ってますので、そのうちやる気が出たらやってみるかも。まあ、そうするともっとマシなもの作らないとなあと思うわけですが&hellip;。</p>

<p>あと、ページを作るとき、前から試してみたかった<code>Ghost</code>を使ってみました。でも、色々登録やら面倒で、結局、<code>Hugo</code>を使うことになりましたが、一応メモ。</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git clone &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://github.com/Torone/GhosToro&quot;</span>&gt;https://github.com/Torone/GhosToro&lt;/a&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="nv">$ </span><span class="nb">cd </span>GhosToro/dev&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="nv">$ </span>npm update npm -g&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="nv">$ </span>npm install grunt&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="nv">$ </span>grunt
</span></code></pre></td></tr></table></div></figure></p>
]]></content>
  </entry>
  
</feed>
